toto (a, q) {
    a = k;
} return k;

toto (a) {
    a = k;
}

k = 3 + 4.3 -4;
toto(3,3,6,k-j);

int toto;
real toto;



short u = -8;
unsigned short p = 95;
int i = 65535;
real j = 14.312465;
unsigned int u = 13;
unsigned real o = 15.36;


//toto (2 4*f 1 -4 d (4+3%2));

//REVOIR POINTEUR !!!
// 4*f != *f

/*titi (a b d e f) {
    i = i + 1;
    for (b = 3; b < 10; b = b + 1)
        if (b)
            j = k + 2;
    n = u;
}*/

/* =====================
   Fichier INPUT de test 
   ===================== */

// ==============================================
// La gestion des commentaires est Operationnelle

// ============================================
// Déclaration de variables typées statiquement

int var_int = 1 + 2 * 2 / 3;
real var_real = (3 % 2) + 47 / 5.6;
bool var_bool = 1 < 2 + 3 + 4;

// ==========================
// Gestion des entiers signés

var_int = -69 + -42;

// ==============================
// Gestion des entiers non signés

var_int = 666 * 10;

// ====================
// Gestion des booléens

var_bool = 6 < 9;
//var_bool = true; // A FAIRE <<<<<<<<<<<<<<

// ======================
// Gestion des caractères

//char var_char = 'a'; // A FAIRE <<<<<<<<<<<<<

// =================
// Gestion des réels

var_real = 1.6 * 4.2;

// ========================
// Gestion des énumérations

// A FAIRE <<<<<<<<<<<<<

// ========================
// Gestion des intervalles

// A FAIRE <<<<<<<<<<<<<

// ========================
// Gestion des chaines de caractères

// A FAIRE <<<<<<<<<<<<<
char c = 'Q';
string str = "blablabla";

// ========================
// Gestion des tableaux à 1 dimension

//int tab[10];
tab[2] = 66;

// ========================
// Gestion des pointeurs

real bibi = 69;

pointer real bibiPOINTER = &bibi;
real newBibi = *bibiPOINTER;

// ================================================
// Gestion des opérations arithmétiques et logiques

var_real = (3 % 2) + 47 / 5.6 * 15;
var_bool = 1 < 2 > (3 + 4) && (4 || -2);

// ========================
// Les appels de procédures

// A FAIRE <<<<<<<<<<<<<

// ================
// Les affectations

int var_int_new = 1 + 2 * 2 / 3;
real var_real_new = (3 % 2) + 47 / 5.6;
bool var_bool_new = 1 < 2 + 3 + 4;

// =========
// Les tests
if(1 < 2) 
	var_int_new = 72 + 3;
else
	var_int_new = 29;

if(var_int_new < 447)
	var_int_new = 447;

// ===========
// Les boucles

int i = 22;

for(i = 44; i > 22; i = i - 1) {
	var_int_new = 12;
}

for(i = 44; i > 22;) {
	var_int_new = 12;
}

while (var_bool_new || 6)
	var_int_new = var_int_new + 1;

do {
    i = k + 1;
} while (var_bool_new);

// =========
// Les blocs

if(2 < 1) {
	var_int_new = 666;
} else if(4 >= 1) {
	var_int_new = 999;
}



/* ============================= */
