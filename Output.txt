t0 = ! a
e = t0

L0:

/*===============
La variable : "toto" est un tableau avec intervalle.
Il n'est pas possible d'affecter une valeur à un intervalle.
===============*/

L1:
t0 = 15 + 3
j = t0

L2:
c = 'a'

L3:
i = j

L4:
t0 = 6 + 4

/*===============
Il n'est pas autorisé de faire une opération arithmétique
entre des nombres et des booléens.
===============*/
t1 = 5 + true
t2 = t0 < t1
i = t2

/*===============
Affectation impossible avec la variable : "i"
L'élément à gauche est de type : INTEGER
Alors que celui de "ErreurGetNomVariable" est de type : OP_BOOL
===============*/

L5:

/*===============
Il n'est pas autorisé de faire une opération arithmétique
entre des nombres et des booléens.
===============*/
t0 = true + 7
i = t0

L6:
if j < 20 jump L8
jump L7
L8:
newJ = 60

L7:
newJ = 25

/*===============
La variable : "newJ" n'a pas été déclarée précédemment.
===============*/

L9:

/*===============
La variable/procédure : "tutu" a déjà été déclarée !!
===============*/
tutu:
func tutu
a = k
L11:
param q
param 26
call tutu
return k

L10:
tyty:
func tyty
a = k
L13:

/*===============
Il est interdit d'appeler une procédure dans le corps d'une procédure
en dehors d'elle même.
La procédure : tutu a été appelée dans : tyty
===============*/
param a
param 10
call tutu

L12:
param 6
param 23
call tutu

L14:
t0 = 3 + 4.3
t1 = t0 - 4
k = t1

/*===============
La variable : "k" n'a pas été déclarée précédemment.
===============*/

L15:

/*===============
La variable/procédure : "toto" n'a pas été déclarée en tant que procédure.
===============*/
param 3
param 3
param 6
t0 = k - j
param t0
call toto

L16:

/*===============
La variable/procédure : "txtx" n'a pas été déclarée précédemment.
===============*/
param 15
param 20
call txtx

L17:

/*===============
La variable/procédure : "toto" a déjà été déclarée !!
===============*/

/*===============
La variable/procédure : "toto" a déjà été déclarée !!
===============*/
t0 = - 8
u = t0

L18:
p = 95

L19:
i = 65535

L20:
j = 14.312465

L21:
u = 13

L22:
o = 15.36

L23:
x = 6

L24:
x = 22

L25:
t0 = 2 * 2
t1 = t0 / 3
t2 = 1 + t1
var_int = t2

L26:
t0 = 3 % 2
t1 = 47 / 5.6
t2 = t0 + t1
var_real = t2

L27:
t0 = 2 + 3
t1 = t0 + 4
t2 = 1 < t1
var_bool = t2

L28:
t0 = - 69
t1 = - 42
t2 = t0 + t1
var_int = t2

L29:
t0 = 666 * 10
var_int = t0

L30:
t0 = 6 < 9
var_bool = t0

L31:
var_bool = true

L32:
t0 = ! true
var_bool = t0

L33:
var_bool = false

L34:
var_char = 'a'

L35:
t0 = 1.6 * 4.2
var_real = t0

L36:

/*===============
La variable/procédure : "couleur" a déjà été déclarée !!
===============*/
c = 'Q'

L37:
str = "blablabla"

L38:
tab[2] = 66

/*===============
La variable : "tab" n'a pas été déclarée précédemment.
===============*/

L39:
bibi = 69

L40:
xx = 'x'

L41:
realpointer = &xx

/*===============
Affectation impossible avec la variable : "realpointer"
L'élément à gauche est de type : POINTER_REAL
Alors que celui de "xx" est de type : CHARACTER
===============*/

L42:
bibiPOINTER = &bibi

L43:
newBibi = *bibiPOINTER

L44:
t0 = 3 % 2
t1 = 47 / 5.6
t2 = t1 * 15
t3 = t0 + t2
var_real = t3

L45:
t0 = 1 < 2
t1 = 3 + 4
t2 = t0 > t1
var_bool = t2

L46:

/*===============
La variable/procédure : "toto" n'a pas été déclarée en tant que procédure.
===============*/
param 3
param 3
param 6
t0 = k - j
param t0
call toto

L47:
t0 = 2 * 2
t1 = t0 / 3
t2 = 1 + t1
var_int_new = t2

L48:
t0 = 3 % 2
t1 = 47 / 5.6
t2 = t0 + t1
var_real_new = t2

L49:
t0 = 2 + 3
t1 = t0 + 4
t2 = 1 < t1
var_bool_new = t2

L50:
if 1 < 2 jump L52
jump L53
L52:
t0 = 72 + 3
var_int_new = t0
jump L51
L53:
var_int_new = 29

L51:
if var_int_new < 447 jump L55
jump L54
L55:
var_int_new = 447

L54:
i = 22

L56:
i = 44
L58:
if i > 22 jump L59
jump L57
L59:
var_int_new = 12
t0 = i - 1
i = t0
jump L58

L57:
i = 44
L61:
if i > 22 jump L62
jump L60
L62:
var_int_new = 12
jump L61

L60:
L64:
if var_bool_new != 0 jump L65
jump L66
L66:
if 6 != 0 jump L65
jump L63
L65:
t0 = var_int_new + 1
var_int_new = t0
jump L64

L63:
L68:
t0 = k + 1
i = t0
if var_bool_new != 0 jump L68
jump L67

L67:
if 2 < 1 jump L70
jump L71
L70:
var_int_new = 666
jump L69
L71:
if 4 >= 1 jump L72
jump L69
L72:
var_int_new = 999

L69:
